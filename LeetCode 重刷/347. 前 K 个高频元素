class Solution {
    public List<Integer> topKFrequent(int[] nums, int k) {
        if (nums == null || nums.length == 0 || k == 0)
            return new ArrayList<>();
        Map<Integer, Integer> map = new HashMap<>();
        for(int num:nums){
            map.put(num, map.getOrDefault(num, 0) + 1);
        }
        LinkedList<Integer>[] fre = new LinkedList[nums.length + 1];
        for(Integer key:map.keySet()){
            int value=map.get(key);
            if(fre[value]==null){
                fre[value] = new LinkedList<>();
            }
            fre[value].add(key);
        }
        List<Integer> res = new ArrayList<>();
        for (int i = fre.length - 1; i >= 0; i--){
            LinkedList<Integer> list = fre[i];
            if(fre[i]!=null){
                while(res.size()<k&&!list.isEmpty()){
                    res.add(list.removeFirst());
                }
            }
        }
        return res;
    }
}