class Solution {
    public int singleNonDuplicate(int[] nums) {
        int low=0,high=nums.length-1;
        while(low<high){
            int mid=(low+high)/2;
            if(mid%2==0){
                if(nums[mid]==nums[mid+1]){
                    low=mid+2;
                }else if(nums[mid]==nums[mid-1]){
                    high=mid-2;
                }else{
                    return nums[mid];
                }
            }else{
                if(nums[mid]==nums[mid-1]){
                    low=mid+1;
                }else if(nums[mid]==nums[mid+1]){
                    high=mid-1;
                }else{
                    return nums[mid];
                }
            }
        }
        return nums[low];
    }
}
//重复的数字下标是偶奇偶奇的组合（从0开始）,
//但是如果中间多了一个单次的数字,后面的数字就变成了 奇偶 