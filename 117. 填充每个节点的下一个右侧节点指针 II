/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/
//BFS
class Solution {
    public Node connect(Node root) {
        if(root==null) return null;
        Queue<Node> queue = new LinkedList<Node>();
        queue.add(root);
        while (!queue.isEmpty()){
            int levelNum = queue.size(); // 当前层元素的个数
            Node pre = null;
            for (int i = 0; i < levelNum; i++){
                Node cur = queue.poll();
                if(cur!=null){
                    if(i>0)pre.next=cur;
                    pre=cur;
                    if (cur.left != null) queue.add(cur.left);
                    if (cur.right!= null) queue.add(cur.right);
                }
            }
        }
        return root;
    }
}
