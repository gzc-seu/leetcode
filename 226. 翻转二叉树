/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
//递归
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root==null||(root.left==null&&root.right==null)) return root;
        TreeNode temp=root.left;
        root.left=root.right;
        root.right=temp;
        root.left=invertTree(root.left);
        root.right=invertTree(root.right);
        return root;
    }
    public static void swap(int a,int b){
        int temp=a;
        a=b;
        b=temp;
    }
}

//迭代
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root==null||(root.left==null&&root.right==null)) return root;
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        queue.add(root);
        while(!queue.isEmpty()){
           TreeNode current=queue.poll();
           TreeNode temp=current.left;
           current.left=current.right;
           current.right=temp;
            
           if(current.left!=null) queue.add(current.left);
           if(current.right!=null) queue.add(current.right);
        }
        return root;
    }
}
