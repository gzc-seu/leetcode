/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
 //给定一个二叉树，返回其节点值自底向上的层次遍历。 （即按从叶子节点所在层到根节点所在的层，逐层从左向右遍历）
class Solution {
    public List<List<Integer>> levelOrderBottom(TreeNode root) {
      LinkedList<List<Integer>> result = new LinkedList<>();
        Queue<TreeNode> queue = new LinkedList<>();
        if(root==null) return result;
        queue.add(root);
        while(!queue.isEmpty())
        {
            int count=queue.size();
            List<Integer> oneLevel = new ArrayList<>();
            while(count>0)
            {
                TreeNode node = queue.poll();
               oneLevel.add(node.val);
            if(node.left != null)
                queue.add(node.left);
            if(node.right != null)
                queue.add(node.right);
            count--;
            }
           result.addFirst(oneLevel);
        }
        return result;
    }
}
