import java.util.ArrayList;
public class Solution {
    public ArrayList<Integer> printMatrix(int [][] matrix) {
       ArrayList<Integer> result=new ArrayList<>();
        if(matrix==null||matrix.length==0) return result;
        int start=0;
        while(matrix.length>start*2&&matrix[0].length>start*2){
            printMatrixClockWisely(matrix, start, start, matrix.length - 1-start, matrix[0].length - 1-start, result);
            start++;
        }
        
        return result;
    }
    public void printMatrixClockWisely(int[][] matrix, int startRow, int startCol, int endRow, int endCol, ArrayList<Integer> result){
        if(startRow<endRow&&startCol<endCol){
            for(int i=startCol;i<=endCol;i++) {result.add(matrix[startRow][i]);}
            for(int i=startRow+1;i<=endRow-1;i++) {result.add(matrix[i][endCol]);}
            for(int i=endCol;i>=startCol;i--) {result.add(matrix[endRow][i]);}
            for(int i=endRow-1;i>=startRow+1;i--) {result.add(matrix[i][startCol]);}
        }else if(startRow==endRow&&startCol<endCol){
            for(int i=startCol;i<=endCol;i++) {result.add(matrix[startRow][i]);}
        }else if(startRow<endRow&&startCol==endCol){
            for(int i=startRow;i<=endRow;i++) {result.add(matrix[i][startCol]);}
        }else if(startRow==endRow && startCol==endCol){
            result.add(matrix[startRow][startCol]);
        }else return ;
    }
}