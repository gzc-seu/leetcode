public class Solution {
    public int movingCount(int threshold, int rows, int cols)
    {
        if(rows<=0||cols<=0||threshold<=0) return 0;
        boolean[] visited = new boolean[rows*cols];
        return movingCountCore(threshold,rows,cols,0,0,visited);
    }
    public int movingCountCore(int threshold, int rows, int cols,int row,int col,boolean[] visited){
        int count=0;
        if(row>=0&&col>=0&&row<rows&&col<cols
           &&visited[row*cols+col]==false
           &&getDigitSum(row)+getDigitSum(col)<=threshold){
            visited[row*cols+col] = true;
            count=1+movingCountCore(threshold,rows,cols,row-1,col,visited)
                   +movingCountCore(threshold,rows,cols,row,col-1,visited)
                   +movingCountCore(threshold,rows,cols,row+1,col,visited)
                   +movingCountCore(threshold,rows,cols,row,col+1,visited);
        }
        return count;
    }
    public int getDigitSum(int number){
        int sum=0;
        while(number>0){
            sum+=number%10;
            number=number/10;
        }
        return sum;
    }
}