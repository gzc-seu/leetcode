import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
/*
public class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }

}
*/
public class Solution {
    ArrayList<ArrayList<Integer> > Print(TreeNode pRoot) {
        ArrayList<ArrayList<Integer>> result=new ArrayList<ArrayList<Integer>>();
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        if(pRoot==null) return result;
        queue.add(pRoot);
        while (!queue.isEmpty()){
            int size=queue.size();
            ArrayList<Integer> arrayList=new ArrayList<Integer>();
            for(int i=0;i<size;i++){
                TreeNode node= queue.poll();
                arrayList.add(node.val);
            if (node.left!=null){
                queue.add(node.left);
            }
            if (node.right!=null){
                queue.add(node.right);
            }
            }
            if(arrayList!=null) result.add(arrayList);
        }
        return result;
    }
}