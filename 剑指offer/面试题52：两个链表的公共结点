/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
//先遍历得到两个链表的长度，求出差值，在长链表上先走差值的步数，再同时出发遍历直到走到公共节点
public class Solution {
    public ListNode FindFirstCommonNode(ListNode pHead1, ListNode pHead2) {
        int length1=0,length2=0,dif=0;
        ListNode p1=pHead1;
        ListNode p2=pHead2;
        while(p1!=null){
            length1++;
            p1=p1.next;
        }
        while(p2!=null){
            length2++;
            p2=p2.next;
        }
        if(length1>length2){
            dif=length1-length2;
            for(int i=0;i<dif;i++){
               pHead1=pHead1.next; 
            }
        }else{
           dif=length2-length1;
            for(int i=0;i<dif;i++){
               pHead2=pHead2.next; 
            } 
        }
        while(pHead1!=null&&pHead2!=null&&pHead1!=pHead2){
            pHead1=pHead1.next;
            pHead2=pHead2.next;
        }
        return pHead1;
    }
}