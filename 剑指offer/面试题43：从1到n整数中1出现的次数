public class Solution {
    public int NumberOf1Between1AndN_Solution(int n) {
        if(n<=0) return 0;
        int curr, low, temp, high = n, i = 1, total = 0;
        while(high!=0){
            high=n/(int)Math.pow(10, i); //获取第i位的高位
            temp=n%(int)Math.pow(10, i);
            curr=temp/(int)Math.pow(10, i-1);//获取第i位
            low=temp%(int)Math.pow(10, i-1);//获取第i位的低位
            if(curr>1){
                total += (high + 1) * (int)Math.pow(10, i-1);
            }else if(curr==1){
                total += high*(int)Math.pow(10, i-1)+ low + 1;
            }else{
                total += high*(int) Math.pow(10, i-1);
            }
            i++;
        }
        return total;
    }
}