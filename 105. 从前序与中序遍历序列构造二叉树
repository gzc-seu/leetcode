/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
//根据一棵树的前序遍历与中序遍历构造二叉树。
class Solution {
    public TreeNode buildTree(int[] preorder, int[] inorder) {
      return build(preorder, inorder, 0,0,inorder.length);
    }
    public static TreeNode build(int[] preorder, int[] inorder,int preStart, int inStart, int length )
    {
        if(length==0) return null;
        int root=preorder[preStart];
        TreeNode treeNode = new TreeNode(root);
        if(length==1) return treeNode;
        for(int i=0;i<length;i++)
        {
            if(root==inorder[inStart+i])
            {
                treeNode.left=build(preorder,inorder,preStart+1,inStart,i);
                treeNode.right=build(preorder,inorder,preStart+i+1,inStart+i+1,length-i-1);
                return treeNode;
            }
        }
        return null;
    }
}
