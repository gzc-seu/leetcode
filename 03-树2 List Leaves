#include<iostream>
#include<queue>
#include<vector> 
using namespace std;
#define Tree int
#define Null -1
const int maxn = 10;
struct TreeNode{
	Tree Left;
	Tree Right;
}T[maxn];
queue<int> q;
Tree MakeTree();
int main()
{
	Tree Root = MakeTree(); //创建树
	q.push(Root);
	Tree temp;
	bool flag = true;
	while(!q.empty()){
		temp = q.front();
		q.pop();
		if(T[temp].Left == Null && T[temp].Right == Null){ //输出叶节点 
			if(flag)
				flag = false;
			else
				printf(" ");
			printf("%d",temp);
		}
		if(T[temp].Left != Null) q.push(T[temp].Left); //左子树入队
		if(T[temp].Right != Null) q.push(T[temp].Right); //右子树入队 
	}
	printf("\n");
	return 0;
}
Tree MakeTree()
{
	int n,i;
	char cl,cr;
	cin>>n;
	vector<int> check(n,0);
	for(i = 0; i < n; i++){
		cin>>cl>>cr;
		if(cl != '-'){
			T[i].Left = cl - '0';
			check[T[i].Left] = 1;
		}
		else T[i].Left = Null;
		if(cr != '-'){
			T[i].Right = cr - '0';
			check[T[i].Right] = 1;
		}
		else T[i].Right = Null;
	}
	for(i = 0; i < n; i++)
		if(!check[i]) break;
	return i;
}
